config:
  module_dependencies: # what other modules do we depend on?
    kv: 1, # a module, and its minimum accepted version
    mothership_models': 1, # another module, and its minimum accepted version     
methods: # a dict of methods we re presenting to the outside world (public only!)
  get_host: # a method identifier
    description: 'retrieve server info for a server identified by hostname.realm.site_id' # duh
    rest_type: 'GET' # the REST method we want to use for this call: GET, POST, PUT, DELETE
    required_args: # dict of info about arguments we just can't live without
    optional_args: # dict holding optional argument info
      min: 1 # minimum number of optional args we'll accept
      max: 1 # maximum number of optional args we'll accept
      args: # the argument definitions themselves
        hw_tag: # an arg
          vartype: 'string' # its type
          desc: 'search for a hw_tag (hardware tag)'# its description
        ip: # an arg
          vartype: 'string' # its type
          desc: 'search for an ip (public or private)' # its description
        mac: # an arg
          vartype: 'string' # its type
          desc: 'search for a MAC address' # its description
        hostname: # an arg
          vartype: 'string' # its type
          desc: 'search for a hostname' # its description
    cmdln_aliases: # list of desired subcommand aliases for our command line
      - si # alias
      - server_info # another alias
      - API_serverinfo # yet another alias
    'return': # a dict defining what our return value looks like
      server: ORMobject # a server table object
      hardware: ORMobject' # a hardware table object
      network:  # a list of network objects, may be 1 to N objects
        - ORMobject # a network table object
        - ORMobject # a second network table object
      kv:  # a list of kv objects describing tags that apply to the machine, may be 0 to N objects
        - ORMobject # a kv table object
        - ORMobject # a second kv table object
